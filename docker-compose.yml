version: '3.8'

services:
  # PostgreSQL Database with PostGIS
  postgres:
    image: postgis/postgis:14-3.3
    container_name: civiclens-postgres
    environment:
      POSTGRES_DB: civiclens
      POSTGRES_USER: civiclens
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - civiclens-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U civiclens"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: civiclens-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme}
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - civiclens-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: civiclens-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - civiclens-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # FastAPI Backend
  backend:
    build:
      context: ./civiclens-backend
      dockerfile: Dockerfile
    container_name: civiclens-backend
    environment:
      DATABASE_URL: postgresql://civiclens:${POSTGRES_PASSWORD:-changeme}@postgres:5432/civiclens
      REDIS_URL: redis://:${REDIS_PASSWORD:-changeme}@redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin}
      ENVIRONMENT: production
      DEBUG: "false"
    volumes:
      - ./civiclens-backend/media:/app/media
    ports:
      - "8000:8000"
    networks:
      - civiclens-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Admin Dashboard
  admin:
    build:
      context: ./civiclens-admin
      dockerfile: Dockerfile
    container_name: civiclens-admin
    environment:
      NEXT_PUBLIC_API_URL: http://backend:8000/api/v1
    ports:
      - "3000:3000"
    networks:
      - civiclens-network
    depends_on:
      - backend
    restart: unless-stopped

  # Citizen Portal
  client:
    build:
      context: ./civiclens-client
      dockerfile: Dockerfile
    container_name: civiclens-client
    environment:
      VITE_API_URL: http://backend:8000/api/v1
    ports:
      - "5173:80"
    networks:
      - civiclens-network
    depends_on:
      - backend
    restart: unless-stopped

networks:
  civiclens-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  minio-data:
